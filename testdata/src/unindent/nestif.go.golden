package unindent

import "strconv"

func NestIf(s string, x int) int {
	if s == "" {
		if x > 0 {
			return x
		}

		return 0
	}

	l := len(s)
	if l > 5 {
		return x
	}

	return l
}

func NestIfFallout(s string, x int) int {
	if s == "" {
		if x > 0 {
			return x
		}
	} else if x < 0 {
		if l := len(s); l > 5 {
			return l
		}
	} else {
		if l := len(s); l > 5 {
			return x
		}
	}

	return 0
}

func NestIfElseAssign(s string, x int) int {
	var y int

	if s == "" {
		if x > 0 {
			return x
		}

		y = 1
	} else if x < 0 {
		if l := len(s); l > 5 {
			return l
		}

		y = 2
	} else {
		if l := len(s); l > 5 {
			return x
		}

		y = 3
	}

	return y
}

func NestIfDeep(s string, x int) int {
	if s == "" {
		if x > 0 {
			l := len(s)
			if l > 5 {
				return x
			}

			return l
		}

		return 0
	}

	return 1
}

func NestIfElseAssignDeep(s string, x int) int {
	var y int

	if s == "" {
		if x > 0 {
			l := len(s)
			if l > 5 {
				return x
			}

			y = l
		} else {
			return 0
		}
	} else {
		return 1
	}

	return y
}

func NestIfOk(s string, x int) int {
	if s == "" {
		if x > 0 {
			return x
		}

		return 0
	}

	l := len(s)
	if l > 5 {
		return x
	}

	return l
}

func FizBuzzNest(x int) string {
	fizz := "fizz"
	buzz := "buzz"

	if x%3 == 0 {
		if x%5 == 0 {
			return fizz + buzz
		}

		return buzz
	}

	if x%5 == 0 {
		return buzz
	}

	return strconv.Itoa(x)
}
